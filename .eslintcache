[{"C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\index.js":"1","C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\pages\\HomePage\\HomePage.jsx":"2","C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\pages\\SearchPage\\SearchPage.jsx":"3","C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\pages\\AddMoviePage\\AddMoviePage.jsx":"4","C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\pages\\EditMoviePage\\EditMoviePage.jsx":"5","C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\componets\\Header\\Header.jsx":"6","C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\pages\\LoginRegisterPage\\LoginRegisterPage.jsx":"7","C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\pages\\MovieDetailsPage\\MovieDetailPage.jsx":"8","C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\componets\\Slider\\Slider.jsx":"9","C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\App.js":"10","C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\componets\\CarouselContainer\\CarouselContainer.jsx":"11","C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\shared\\utils.js":"12"},{"size":516,"mtime":1612293340114,"results":"13","hashOfConfig":"14"},{"size":1366,"mtime":1612287014780,"results":"15","hashOfConfig":"14"},{"size":1407,"mtime":1612128236377,"results":"16","hashOfConfig":"14"},{"size":3603,"mtime":1612296033486,"results":"17","hashOfConfig":"14"},{"size":202,"mtime":1612128236348,"results":"18","hashOfConfig":"14"},{"size":3188,"mtime":1612295807565,"results":"19","hashOfConfig":"14"},{"size":7999,"mtime":1612296186879,"results":"20","hashOfConfig":"14"},{"size":3159,"mtime":1612265262195,"results":"21","hashOfConfig":"14"},{"size":4281,"mtime":1612265262203,"results":"22","hashOfConfig":"14"},{"size":1434,"mtime":1612296250776,"results":"23","hashOfConfig":"14"},{"size":1039,"mtime":1612265262196,"results":"24","hashOfConfig":"14"},{"size":329,"mtime":1612128236494,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hidibx",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\index.js",[],"C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\pages\\HomePage\\HomePage.jsx",[],"C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\pages\\SearchPage\\SearchPage.jsx",[],["54","55"],"C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\pages\\AddMoviePage\\AddMoviePage.jsx",["56","57","58","59"],"C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\pages\\EditMoviePage\\EditMoviePage.jsx",[],"C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\componets\\Header\\Header.jsx",[],"C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\pages\\LoginRegisterPage\\LoginRegisterPage.jsx",["60"],"import React from 'react'\r\nimport UserIcon from \"../../assets/UserIcon.svg\";\r\nimport PasswordIcon from \"../../assets/PasswordIcon.svg\";\r\nimport Btn from \"../../assets/Btn.svg\";\r\nimport BtnBlank from \"../../assets/BtnBlank.svg\";\r\nimport BtnReg from \"../../assets/BtnReg.svg\";\r\nimport BtnBlankReg from \"../../assets/BtnBlankReg.svg\";\r\nimport './LoginRegisterPage.css'\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            username: '',\r\n            password: '',\r\n            accessToken: '',\r\n            authenticated: false\r\n        };\r\n        this.handleChangeUsername = this.handleChangeUsername.bind(this);\r\n        this.handleChangePassword = this.handleChangePassword.bind(this);\r\n    }\r\n\r\n    handleChangeUsername(event) {\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n    }\r\n\r\n    handleChangePassword(event) {\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n    }\r\n\r\n    handleClick(event) {\r\n        var apiBaseUrl = \"https://movies-app-siit.herokuapp.com/auth/\"\r\n        const payload = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8'\r\n            },\r\n            body: JSON.stringify({\r\n                'username': this.state.username,\r\n                'password': this.state.password\r\n            })\r\n        };\r\n\r\n        let credentials;\r\n\r\n        fetch(apiBaseUrl + 'login', payload)\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    console.log(\"Logged In\")\r\n                    return response.json()\r\n                } else {\r\n                    return console.log(\"Wrong Password/Username not Registered!\")\r\n            })\r\n            .then(data => credentials = data)\r\n            .then(() => console.log(credentials.accessToken))\r\n            .then(() => localStorage.setItem('accessToken', credentials.accessToken))\r\n            .then(() => this.setState({\r\n                accessToken: credentials.accestToken,\r\n                authenticated: !false\r\n            }))\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content\">\r\n                    <div className=\"login-form\">\r\n                        <div className=\"userData\">\r\n                            <span>\r\n                                <img src={UserIcon} />\r\n                            </span>\r\n                            <input type=\"text\" name=\"username\" placeholder=\"Username\" value={this.state.username} onChange={this.handleChangeUsername} />\r\n                        </div>\r\n                        <div className=\"userData\">\r\n                            <span>\r\n                                <img src={PasswordIcon} />\r\n                            </span>\r\n                            <input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleChangePassword} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"submit-login\">\r\n                    <img src={Btn} onClick={(event) => this.handleClick(event)} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass RegisterPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            username: '',\r\n            password: '',\r\n            accessToken: '',\r\n            authenticated: false\r\n        };\r\n        this.handleChangeUsername = this.handleChangeUsername.bind(this);\r\n        this.handleChangePassword = this.handleChangePassword.bind(this);\r\n    }\r\n\r\n    handleChangeUsername(event) {\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n    }\r\n\r\n    handleChangePassword(event) {\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n    }\r\n\r\n    handleClick(event) {\r\n        var apiBaseUrl = \"https://movies-app-siit.herokuapp.com/auth/\"\r\n        const payload = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8'\r\n            },\r\n            body: JSON.stringify({\r\n                'username': this.state.username,\r\n                'password': this.state.password\r\n            })\r\n        };\r\n\r\n        let credentials;\r\n\r\n        fetch(apiBaseUrl + 'register', payload)\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    console.log(\"Registered\")\r\n                    return response.json()\r\n                } else {\r\n                    return console.log(\"Username already existing\")\r\n            })\r\n            .then(data => credentials = data)\r\n            .then(() => console.log(credentials.accessToken))\r\n            .then(() => localStorage.setItem('accessToken', credentials.accessToken))\r\n            .then(() => this.setState({\r\n                accessToken: credentials.accestToken,\r\n                authenticated: !false\r\n            }))\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content\">\r\n                    <div className=\"register-form\">\r\n                        <div className=\"userData\">\r\n                            <span>\r\n                                <img src={UserIcon} />\r\n                            </span>\r\n                            <input type=\"text\" name=\"username\" placeholder=\"Username\" value={this.state.username} onChange={this.handleChangeUsername} />\r\n                        </div>\r\n                        <div className=\"userData\">\r\n                            <span>\r\n                                <img src={PasswordIcon} />\r\n                            </span>\r\n                            <input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleChangePassword} />\r\n                        </div>\r\n                        <div className=\"userData\">\r\n                            <span>\r\n                                <img src={PasswordIcon} />\r\n                            </span>\r\n                            <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" required />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"submit-register\">\r\n                    <img src={BtnReg} onClick={(event) => this.handleClick(event)} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class LoginRegisterPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: true,\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(event) {\r\n        this.setState({\r\n            active: !this.state.active\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"base-container\" >\r\n                <div classsName='toggle-nav'>\r\n                    {this.state.active ?\r\n                        <div>\r\n                            <img type='button' src={BtnBlankReg} onClick={this.handleClick} />\r\n                            <img type='button' src={BtnReg} onClick={this.handleClick} />\r\n                        </div> :\r\n                        <div>\r\n                            <img type='button' src={Btn} onClick={this.handleClick} />\r\n                            <img type='button' src={BtnBlank} onClick={this.handleClick} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"login-register\">\r\n                    {this.state.active ? <RegisterPage /> : <LoginPage />}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\pages\\MovieDetailsPage\\MovieDetailPage.jsx",["61","62","63","64"],"import React from \"react\";\r\nimport \"./MovieDetailPage.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport \"../../assets/BtnBlankReg.svg\";\r\nimport { LoginRegisterPage } from \"../LoginRegisterPage/LoginRegisterPage\";\r\nimport { ReactComponent } from \"../../assets/BtnBlankReg.svg\";\r\nimport { HomePage } from \"../HomePage/HomePage\";\r\n\r\nclass MovieDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loadind: true,\r\n      movie: [],\r\n      editMovie: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const url = \"https://movies-app-siit.herokuapp.com/movies/\";\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    this.setState({ movie: data.results[1], loading: false });\r\n  }\r\n\r\n  backButton = () => this.props.history.goBack();\r\n\r\n  editButton = () => {\r\n    this.setState({\r\n      editMovie: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const styleArea = {\r\n      marginTop: \"3%\",\r\n      marginBottom: \"3%\",\r\n      marginLeft: \"0%\",\r\n      width: \"95vw\",\r\n      height: \"90%\",\r\n      background: \"rgba(230, 230, 240, 0.10)\",\r\n      borderRadius: \"20px\",\r\n      zIndex: \"-1px\",\r\n    };\r\n\r\n    console.log(this.props.location);\r\n\r\n    return (\r\n      <div>\r\n        {this.state.loading || !this.state.movie ? (\r\n          <div className=\"loading\">loading...</div>\r\n        ) : (\r\n          <tr className=\"movie-details\" style={styleArea}>\r\n            <th>\r\n              <img className=\"posters\" src={this.state.movie.Poster} />\r\n            </th>\r\n\r\n            <th>\r\n              <h2 className=\"movie-title\">{this.state.movie.Title}</h2>\r\n\r\n              <Link to=\"/login-register\">\r\n                <button className=\"button\" onClick={this.editButton.bind(this)}>\r\n                  Edit Movie\r\n                </button>\r\n              </Link>\r\n\r\n              <div className=\"imdbRating\">\r\n                {\" \"}\r\n                IMDB Rating:\r\n                <span className=\"rating\"> {this.state.movie.imdbRating}</span>\r\n              </div>\r\n              <ul className=\"movie-description\">\r\n                <li>\r\n                  {\" \"}\r\n                  Year :\r\n                  <span className=\"movie-des\"> {this.state.movie.Year}</span>\r\n                </li>\r\n                <li>\r\n                  Genre :\r\n                  <span className=\"movie-des\"> {this.state.movie.Genre}</span>\r\n                </li>\r\n                <li>\r\n                  Country :\r\n                  <span className=\"movie-des\"> {this.state.movie.Country}</span>\r\n                </li>\r\n                <li>\r\n                  Type :\r\n                  <span className=\"movie-des\"> {this.state.movie.Type}</span>\r\n                </li>\r\n                <li>\r\n                  Runtime :\r\n                  <span className=\"movie-des\"> {this.state.movie.Runtime}</span>\r\n                </li>\r\n              </ul>\r\n            </th>\r\n            <button className=\"exit\" onClick={this.backButton}>\r\n              X\r\n            </button>\r\n          </tr>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const MovieDetailsPage = withRouter(MovieDetails);\r\n","C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\componets\\Slider\\Slider.jsx",[],"C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\App.js",[],"C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\componets\\CarouselContainer\\CarouselContainer.jsx",[],["65","66"],"C:\\Users\\neleg\\OneDrive\\Desktop\\Cursuri\\My_IMDB_TeamProject_GIT\\myIMDB_17.1\\src\\shared\\utils.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":4,"column":10,"nodeType":"73","messageId":"74","endLine":4,"endColumn":25},{"ruleId":"71","severity":1,"message":"75","line":5,"column":10,"nodeType":"73","messageId":"74","endLine":5,"endColumn":18},{"ruleId":"71","severity":1,"message":"76","line":5,"column":20,"nodeType":"73","messageId":"74","endLine":5,"endColumn":27},{"ruleId":"77","severity":1,"message":"78","line":98,"column":25,"nodeType":"79","endLine":98,"endColumn":55},{"ruleId":null,"fatal":true,"severity":2,"message":"80","line":58,"column":14},{"ruleId":"71","severity":1,"message":"81","line":5,"column":10,"nodeType":"73","messageId":"74","endLine":5,"endColumn":27},{"ruleId":"71","severity":1,"message":"82","line":6,"column":10,"nodeType":"73","messageId":"74","endLine":6,"endColumn":24},{"ruleId":"71","severity":1,"message":"83","line":7,"column":10,"nodeType":"73","messageId":"74","endLine":7,"endColumn":18},{"ruleId":"77","severity":1,"message":"78","line":55,"column":15,"nodeType":"79","endLine":55,"endColumn":72},{"ruleId":"67","replacedBy":"84"},{"ruleId":"69","replacedBy":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'FontAwesomeIcon' is defined but never used.","Identifier","unusedVar","'faImages' is defined but never used.","'faImage' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Parsing error: Unexpected token\n\n  56 |                 } else {\n  57 |                     return console.log(\"Wrong Password/Username not Registered!\")\n> 58 |             })\n     |              ^\n  59 |             .then(data => credentials = data)\n  60 |             .then(() => console.log(credentials.accessToken))\n  61 |             .then(() => localStorage.setItem('accessToken', credentials.accessToken))","'LoginRegisterPage' is defined but never used.","'ReactComponent' is defined but never used.","'HomePage' is defined but never used.",["86"],["87"],"no-global-assign","no-unsafe-negation"]
